''' <summary>Returns the absolute value of number.</summary>
''' <param name="n">Any valid numeric expression.</param>
Function ABS(n) ' As Integer
End Function

''' <summary>Returns code of the first character in <i>string</i>.</summary>
''' <param name="string">The character to get the code for. If a string is used, the code for the first character is given.</param>
Function ASC(string)
End Function

''' <summary>Returns the arctangent of a <i>n</i> in radians.</summary>
''' <param name="n">Any valid numeric expression.</param>
Function ATN(n)
End Function

''' <summary>Returns 1 if Joystick Button <i>n</i> is being pressed; 0 if Joystick Button <i>n</i> is not being pressed.  <i>n</i> can be: 0 - Right joystick. Button 1 (old joystick) 1 - Right joystick. Button 2 2 - Left Joystick. Button 1 (old joystick) 3 - Left Joystick. Button 2</summary>
''' <param name="n">Any valid numeric expression.</param>
Function BUTTON(n)
End Function

''' <summary>Returns the character corresponding to character code <i>n</i>.</summary>
''' <param name="n">Any valid numeric expression.</param>
Function CHR$(n)
End Function

''' <summary>Returns the cosine of an <i>angle</i> using radians.</summary>
''' <param name="angle">Any valid numeric expression.</param>
Function COS(angle)
End Function

''' <summary>Returns FALSE(0) if there is more data; TRUE(-1) if end of file has been read.</summary>
''' <param name="d">Device number: -1 Cassette</param>
Function EOF(d)
End Function

''' <summary>Returns a natural exponential number (e^<i>n</i>).</summary>
''' <param name="n">ny valid numeric expression</param>
Function EXP(n)
End Function

''' <summary>Returns the truncated integer of <i>n</i>.  Unlike INT, FIX does not return the next lower number for a negative <i>n</i>.</summary>
''' <param name="n">ny valid numeric expression</param>
Function FIX(n)
End Function

''' <summary>Returns a string with the hexadecimal value of <i>n</i>.</summary>
''' <param name="n">Any valid numeric expression</param>
Function HEX$(n)
End Function

''' <summary>Returns information on point <i>x</i>, <i>y</i> from the high-resolution graphics screen.</summary>
''' <param name="x">Any valid numeric expression</param>
''' <param name="y">Any valid numeric expression</param>
''' <returns>0 point is reset; Code point is set</returns>
Function HPOINT(x, y)
End Function

''' <summary>Checks the keyboard and returns the key being pressed or, if no key is being pressed, returns a null string (" ").</summary>
Function INKEY$
End Function

''' <summary>Searches a string. Returns location of a target string in a search string:</summary>
''' <param name="p">Start position of search</param>
''' <param name="s">String being searched</param>
''' <param name="t"Target string</param>
''' <returns>0 point is reset; Code point is set</returns>
Function INSTR(p, s, t))
End Function

''' <summary>Converts <i>n</i> to the largest integer that is less than or equal to <i>n</i>.</summary>
''' <param name="n">Any valid numeric expression</param>
Function INT(n)
End Function

''' <summary>Returns the horizontal or vertical cooridinate (<i>j</i>) of the left or right joystick:</summary>
''' <param name="j">0 - Horizontal, right joystick; 1 - Vertical, right joystick; 2 - Horizontal, left joystick; 3 - Vertical, left joystick</param>
Function JOYSTK(j)
End Function

''' <summary>Returns the left portion of a string.</summary>
''' <param name="string">Valid string expression</param>
''' <param name="length">Valid integer expression</param>
''' <returns>string</returns>
Function LEFT$(string, length)
End Function

''' <summary>Returns the length of <i>string</i></summary>
Function LEN(string)
End Function

''' <summary>Returns the natural logarithm of <i>n</i>.</summary>
''' <param name="n">Valid numeric expression</param>
Function LOG(n)
End Function

''' <summary>Returns the contents of the virtual memory location (0-524287 decimal or 0-$7FFFF hexadecimal).</summary>
''' <param name="memory location">0-524287 decimal or 0-$7FFFF hexadecimal</param>
Function LPEEK(memory location)
End Function

''' <summary>Returns a substring of string <i>s</i>.</summary>
''' <param name="s">source string</param>
''' <param name="p">starting position of substring</param>
''' <param name="l">length of substring</param>
Function MID$(s, p, l)
End Function

''' <summary>Returns the contents of a memory location (0-65535 decimal or 0-&HFFFF hexadecimal)</summary>
''' <param name="memory location">0-65535 decimal or 0-&HFFFF hexadecimal</param>
Function PEEK(memory location)
End Function

''' <summary>Returns information on point <i>x</i>, <i>y</i> from the low-resolution text screen:.</summary>
''' <param name="x">Valid integer expression</param>
''' <param name="y">Valid integer expression</param>
''' <returns>-1 - Point is part of an alphanumeric character; 0 - Point is reset; <i>Code</i> Point is set</returns>
Function POINT(x, y)
End Function

''' <summary>Returns the current print position.</summary>
''' <param name="dev">Print device number: 0 - Screen, -2 - Printer</param>
Function POS(dev)
End Function

''' <summary>Returns the information on point <i>x</i>, <i>y</i> from the low-resolution graphics screen:</summary>
''' <param name="x">Valid integer expression</param>
''' <param name="y">Valid integer expression</param>
''' <returns>0 - Point is reset; <i>Code</i> Point is set</returns>
Function PPOINT(x, y)
End Function

''' <summary>Returns the right portion of a string</summary>
''' <param name="string">Source string</param>
''' <param name="length">Specifies the number of characters returned</param>
Function RIGHT$(string, length)
End Function

''' <summary>Generates a "random" number between 1 and <i>n</i> if <i>n</i>>i, or between 0 and 1 if <i>n</i>=0.</summary>
''' <param name="n">Random number seed</param>
Function RND(n)
End Function

''' <summary>Returns the sign of <i>n</i>:</summary>
''' <param name="n">Valid numeric expression</param>
''' <returns>-1 - Negative; 0 - 0; 1 - Positive</returns>
Function SGN(n)
End Function

''' <summary>Returns the sine of <i>angle</i> using radians</summary>
''' <param name="angle">Valid numeric expression</param>
Function SIN(angle)
End Function

''' <summary>Returns a string of a repeated character.</summary>
''' <param name="l">Length of string</param>
''' <param name="c">Character used. Can be a code, or a string</param>
Function STRING$(l, c)
End Function

''' <summary>Converts <i>n</i> to a string.</summary>
''' <param name="n">Valid ASCII character code</param>
Function STR$(n)
End Function

''' <summary>Returns the square root of <i>n</i>.</summary>
''' <param name="n">Valid numeric expression</param>
Function SQR(n)
End Function

''' <summary>Returns the tangent of <i>angle</i> using radians.</summary>
''' <param name="n">Valid numeric expression</param>
Function TAN(angle)
End Function

''' <summary>Calls machine-language subroutine <i>n</i>, passes it an argument, and returns a value from the subroutine to the BASIC program.</summary>
Function USRn(arguement)
End Function

''' <summary>Converts a string to a number</summary>
''' <param name="string">Valid string/numeric expression</param>
Function VAL(string)
End Function

''' <summary>Returns a pointer to where a variable is located in memory.</summary>
''' <param name="variable">Dim'ed variable</param>
Function VARPTR(variable)
End Function