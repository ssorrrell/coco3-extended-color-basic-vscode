{
  "CLEAR": {
    "documentation": "Erases variables, reserves string workspace and reserves high memory for machine language programs."
  },
  "CONT": {
    "documentation": "Continues program execution after a program halt from the BREAK key or a STOP instruction"
  },
  "DATA": {
    "documentation": "Stores numeric and string constants for use with READ statement."
  },
  "DEFUSR": {
    "documentation": "Defines the starting address of a machine language subroutine."
  },
  "DEL": {
    "documentation": "Deletes program lines"
  },
  "DIM": {
    "documentation": "Dimensions variables."
  },
  "EDIT": {
    "documentation": "Edits a program line.  After fetching specified line number, EDIT recognizes several commands"
  },
  "ELSE": {
    "documentation": ""
  },
  "END": {
    "documentation": "Marks the end of a BASIC program."
  },
  "EXEC": {
    "documentation": "Transfers control to a machine-language program at address.  If address is omitted, congtrol is transferred to address set in the last CLOADM."
  },
  "FOR": {
    "documentation": "Defines the beginning of a loop.  The end is specified by NEXT."
  },
  "GOSUB": {
    "documentation": "Calls a subroutine beginning at the specified line number."
  },
  "GOTO": {
    "documentation": "Jumps to the specified line number."
  },
  "IF": {
    "documentation": "Performs a test.  If the results are true, the computer executes the first instruction (#1).  If the results are false, the coputer executes the second instruction (#2)."
  },
  "INKEY$": {
    "documentation": "Checks the keyboard and returns the key being pressed or, if no key is being pressed, returns a null string (\" \")"
  },
  "INPUT": {
    "documentation": "Read data from the keyboard, and saves it in one or more variables."
  },
  "LET": {
    "documentation": "Assigns a value to a variable (optional)."
  },
  "LINE INPUT": {
    "documentation": "Reads data from the keyboard, and saves it in a variable.  Commas are characters, and not delimters."
  },
  "LIST": {
    "documentation": "Lists specified program lines(s) or the entire program on the screen."
  },
  "LLIST": {
    "documentation": "Lists specified program line(s) or the entire program on the printer."
  },
  "LPEEK": {
    "documentation": "Returns the contents of virtual memory location (0-524287 decimal or 0-$7FFFF hexadecimal."
  },
  "LPOKE": {
    "documentation": "Stores a value (0-255) in a virtual memory location (0-524287 decimal or 0-$7FFFF hexadecimal)."
  },
  "MEM": {
    "documentation": "Returns the amount of free memory."
  },
  "NEW": {
    "documentation": "Erases everything in memory."
  },
  "NEXT": {
    "documentation": "Defines the end fo a FOR loop."
  },
  "ON BRK GOTO": {
    "documentation": "Jumps to line number when the BREAK key is pressed."
  },
  "ON ERR GOTO": {
    "documentation": "Jumps to line number when an error occurs."
  },
  "ON": {
    "documentation": ""
  },
  "PEEK": {
    "documentation": "Returns the contents of memory location (0-65535 decimal or 0-&HFFFF hexadecimal)."
  },
  "POKE": {
    "documentation": "Stores a value (0-255) in a memory location (0-65535 decimal or 0-$FFFF hexadecimal)"
  },
  "READ": {
    "documentation": "Reads the next item(s) in a DATA line.  SAves data in specified variable(s)."
  },
  "REM": {
    "documentation": "Lets you insert comments in a program line.  The computer ignores everything in the line after the REM."
  },
  "RENUM": {
    "documentation": "Renumbers program lines."
  },
  "RESET": {
    "documentation": "Resets a point on the low-resolution text screen to the background color."
  },
  "RESTORE": {
    "documentation": "Sets the computer's data pointer back to the first item on the first DATA line."
  },
  "RETURN": {
    "documentation": "Returns the computer from a subroutine to the BASIC word following GOSUB."
  },
  "RUN": {
    "documentation": "Executes the program."
  },
  "STOP": {
    "documentation": "Stops execution of a program."
  },
  "THEN": {
    "documentation": ""
  },
  "TIMER": {
    "documentation": "Sets timer to n."
  },
  "TROFF": {
    "documentation": "Turns off program tracer."
  },
  "TRON": {
    "documentation": "Turns on program tracer."
  },
  "VARPTR": {
    "documentation": "Returns a pointer to where a veriable is located in memory."
  }
}
