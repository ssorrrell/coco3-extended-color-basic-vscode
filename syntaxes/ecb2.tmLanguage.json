{
	"information_for_contributors": [
		"This file has been converted from https://github.com/textmate/asp.vb.net.tmbundle/blob/master/Syntaxes/ASP%20VB.net.plist",
		"If you want to provide a fix or improvement, please create a pull request against the original repository.",
		"Once accepted there, we are happy to receive an update request."
	],
	"version": "https://github.com/textmate/asp.vb.net.tmbundle/commit/72d44550b3286d0382d7be0624140cf97857ff69",
	"name": "coco3-extended-color-basic",
	"scopeName": "source.bas",
	"comment": "Modified from the original ASP bundle. Originally modified by Thomas Aylott subtleGradient.com",
	"patterns": [
		{
			"match": "\\n",
			"name": "meta.ending-space"
		},
		{
			"match": ":",
			"name": "punctuation.terminator.statement.ecb2"
		},
		{
			"begin": "^(?=\\t)",
			"end": "(?=[^\\t])",
			"name": "meta.leading-space",
			"patterns": [
				{
					"captures": {
						"1": {
							"name": "meta.odd-tab.tabs"
						},
						"2": {
							"name": "meta.even-tab.tabs"
						}
					},
					"match": "(\\t)(\\t)?"
				}
			]
		},
		{
			"begin": "^(?= )",
			"end": "(?=[^ ])",
			"name": "meta.leading-space",
			"patterns": [
				{
					"captures": {
						"1": {
							"name": "meta.odd-tab.spaces"
						},
						"2": {
							"name": "meta.even-tab.spaces"
						}
					},
					"match": "(  )(  )?"
				}
			]
		},
		{
			"name": "comment.line.ecb2",
			"match": "(?:'|REM\\b).*$"
		},
		{
			"match": "(?:\\s*\\b(ON BRK GOTO|ON ERR GOTO)\\b\\s*)",
			"name": "keyword.control.ecb2"
		},
		{
			"match": "(?:\\b(IF|THEN|ELSE|FOR|STEP|TO|NEXT|GOSUB|GOTO|EXEC|END|DEFUSR|NEW|STOP|TRON|TROFF|LIST|LLIST)\\b)",
			"name": "keyword.control.ecb2"
		},
		{
			"match": "(?:\\b(AND|NOT|OR)\\b)",
			"name": "keyword.operator.expression.ecb2"
		},
		{
			"captures": {
				"1": {
					"name": "storage.type.ecb2"
				},
				"2": {
					"name": "variable.other.dim.ecb2"
				}
			},
			"match": "\\b(?:(DIM)\\s+\\b(\\(?[A-Z]\\w*\\)?\b(?:\\s*,\\s*\b\\(?[A-Z]\\w*\\)?\\b)*))"
		},
		{
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.ecb2"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.ecb2"
				}
			},
			"name": "string.quoted.double.ecb2",
			"patterns": [
				{
					"match": "\"\"",
					"name": "constant.character.escape.apostrophe.ecb2"
				}
			]
		},
		{
			"match": "(?:\\b(ABS|ASC|ATN|BUTTON|CHR\\$|COS|EOF|ERLIN|ERNO|EXP|FIX|HEX\\$|HPOINT|INKEY\\$|INSTR|INT|JOYSTK|LEFT\\$|LEN|LOG|LPEEK|MEM|MID\\$|PEEK|POINT|POS|PPOINT|RIGHT\\$|RND|SGN|SIN|STRING\\$|STR\\$|SQR|TAN|TIMER|USR|VAL|VARPTR)\\b)",
			"name": "support.function.ecb2"
		},
		{
			"match": "\\b\\[?[A-Z][A-Z0-9\\$]*\\]?\\s*\\(",
			"name": "entity.name.function.ecb2"
		},
		{
			"match": "\\b((([0-9]+\\.?[0-9]*)|(\\.[0-9]+)))\\b",
			"name": "constant.numeric.ecb2"
		},
		{
			"match": "&(H)[0-9A-F]+\\b",
			"name": "constant.numeric.hex.ecb2"
		},
		{
			"match": "&(O)[0-7]+\\b",
			"name": "constant.numeric.oct.ecb2"
		},
		{
			"match": "\\b\\(?[A-Z][A-Z\\$]*\\)?(?=\\.)",
			"name": "variable.other.object.ecb2"
		},
		{
			"match": "(?<=\\.)\\[?[A-Z][A-Z\\$]*\\]?\\b",
			"name": "variable.other.member.ecb2"
		}
	]
}